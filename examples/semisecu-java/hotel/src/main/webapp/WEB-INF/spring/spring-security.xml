<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
        http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.1.xsd">

	<!-- HTTP security configurations -->
	<http auto-config="true" use-expressions="true">
		<form-login login-processing-url="/logincheck" login-page="/login"
			authentication-failure-url="/login?error=1" />
		<logout logout-url="/logout" />
		<!-- Configure these elements to secure URIs in your application -->
		<!-- <intercept-url pattern="/choices/**" access="hasRole('ROLE_ADMIN')" 
			/> -->
		<!-- <intercept-url pattern="/member/**" access="isAuthenticated()" /> -->
		<!-- <intercept-url pattern="/resources/**" access="permitAll" /> -->
		<!-- <intercept-url pattern="/**" access="permitAll" /> -->
	</http>

	<!-- Configure Authentication mechanism -->
	<authentication-manager alias="authenticationManager">
		<authentication-provider>
			<password-encoder base64="false" hash="plaintext" />
			<!-- <password-encoder hash="sha-256" /> -->
			<jdbc-user-service data-source-ref="dataSource"
				users-by-username-query="select name, password, 1 from users where name=?"
				authorities-by-username-query="select u.name, r.name from users u, roles r where u.id=r.userid and u.name=?" />
		</authentication-provider>
	</authentication-manager>
</beans:beans>